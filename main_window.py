# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import webbrowser

import SDF_generate_window
import os
import MF_window, SDF_window, SDF_generate_window
import sys
import cv2 as cv
import jiantouziyuan_rc
import numpy as np
from numpy import fft
from scipy import signal
import lightpathziyuan_rc
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm


class Ui_menu(object):
    def setupUi(self, menu):
        menu.setObjectName("menu")
        menu.resize(700, 432)
        self.centralwidget = QtWidgets.QWidget(menu)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_principle = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_principle.setGeometry(QtCore.QRect(180, 120, 141, 35))
        self.pushButton_principle.setObjectName("pushButton_principle")
        self.pushButton_lighpath = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_lighpath.setGeometry(QtCore.QRect(180, 180, 141, 35))
        self.pushButton_lighpath.setObjectName("pushButton_lighpath")
        self.pushButton_step = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_step.setGeometry(QtCore.QRect(180, 240,141, 35))
        self.pushButton_step.setObjectName("pushButton_step")
        self.pushButton_exit = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_exit.setGeometry(QtCore.QRect(380, 240, 141, 35))
        self.pushButton_exit.setObjectName("pushButton_exit")
        self.pushButton_sample = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_sample.setGeometry(QtCore.QRect(380, 180, 141, 35))
        self.pushButton_sample.setObjectName("pushButton_sample")
        self.pushButton_go = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_go.setGeometry(QtCore.QRect(380, 120, 141, 35))
        self.pushButton_go.setObjectName("pushButton_go")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 60, 381, 20))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        menu.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(menu)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 608, 22))
        self.menubar.setObjectName("menubar")
        menu.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(menu)
        self.statusbar.setObjectName("statusbar")
        menu.setStatusBar(self.statusbar)

        self.retranslateUi(menu)
        QtCore.QMetaObject.connectSlotsByName(menu)
        ##################连接按钮

        self.pushButton_principle.clicked.connect(self.open_principle)
        self.pushButton_sample.clicked.connect(self.open_sample)
        self.pushButton_go.clicked.connect(self.open_go)
        self.pushButton_lighpath.clicked.connect(self.open_lightpath)
        self.pushButton_step.clicked.connect(self.open_step)
        self.pushButton_exit.clicked.connect(menu.close)


    def retranslateUi(self, menu):
        _translate = QtCore.QCoreApplication.translate
        menu.setWindowTitle(_translate("menu", "菜单"))
        self.pushButton_principle.setText(_translate("menu", "实验原理"))
        self.pushButton_lighpath.setText(_translate("menu", "实验光路"))
        self.pushButton_step.setText(_translate("menu", "实验步骤"))
        self.pushButton_exit.setText(_translate("menu", "退出"))
        self.pushButton_sample.setText(_translate("menu", "实验样本"))
        self.pushButton_go.setText(_translate("menu", "开始实验"))
        self.label.setText(_translate("menu", "基于傅里叶梅林变换与SDF的图像识别"))
    def open_principle(self):
        webbrowser.open('https://sthoduka.github.io/imreg_fmt/')
    def open_sample(self):
        print('import sample')
        import sample
    def open_step(self):
        webbrowser.open('step.pdf')
    def open_go(self):
        self.one=MF_window.Ui_MF()
        self.two = SDF_window.Ui_SDF_window()
        self.three=SDF_generate_window.Ui_SDF_generate()
        self.two.show()
        self.three.show()
        self.one.show()

    def open_lightpath(self):
        webbrowser.open('lightpath.pdf')


if __name__ == '__main__':
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()    # 创建窗体类对象--窗口类型对象
    ui = Ui_menu()                    # 创建PyQT设计的窗体对象--该类用于初始化任何类型的窗口设置
    ui.setupUi(MainWindow)                  # 初始化MainWindow窗口设置
    MainWindow.show()                       # 显示窗口
    sys.exit(app.exec_())